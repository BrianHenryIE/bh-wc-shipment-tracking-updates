<?php
/**
 * Adds the last tracking update beside the tracking number on the orders admin list page.
 *
 * @link       https://BrianHenryIE.com
 * @since      2.0.0
 *
 * @package    brianhenryie/bh-wc-shipment-tracking-updates
 *
 * @author     BrianHenryIE <BrianHenryIE@gmail.com>
 */

namespace BrianHenryIE\WC_Shipment_Tracking_Updates\WooCommerce_Shipment_Tracking;

use BrianHenryIE\WC_Shipment_Tracking_Updates\API\API;
use BrianHenryIE\WC_Shipment_Tracking_Updates\API\Trackers\Tracking_Details_Abstract;
use WC_Order;

/**
 * Replaces the column data via filter.
 *
 * @phpstan-type TrackingItem array{
 *   tracking_provider: string,
 *   custom_tracking_provider: string,
 *   custom_tracking_link: string,
 *   tracking_number: string,
 *   date_shipped: string,
 *   tracking_id: string
 *  }
 */
class Order_List_Table {

	/**
	 * Discard the HTML generated by the Shipment Tracking plugin, but hook into its filter and
	 * reproduce its HTML with additional data.
	 *
	 * @hooked woocommerce_shipment_tracking_get_shipment_tracking_column
	 *
	 * @see \WC_Shipment_Tracking_actions::get_shipment_tracking_column()
	 *
	 * @param string         $html The existing HTML being output.
	 * @param int            $order_id The WooCommerce order id.
	 * @param TrackingItem[] $tracking_items The WooCommerce Shipment Tracking data for this order.
	 *
	 * @return string HTML to output.
	 */
	public function append_tracking_detail_to_column( string $html, int $order_id, array $tracking_items ): string {

		if ( count( $tracking_items ) < 1 ) {
			return $html;
		}

		$wc_shipment_tracking_actions = wc_shipment_tracking()->actions;

		$order = wc_get_order( $order_id );

		if ( ! ( $order instanceof WC_Order ) ) {
			return $html;
		}

		/**
		 * Prior saved tracking updates for this order.
		 *
		 * @var array<string, Tracking_Details_Abstract>|false $order_meta_all_tracking_updates
		 */
		$order_meta_all_tracking_updates = $order->get_meta( API::BH_WC_SHIPMENT_TRACKING_UPDATES_ORDER_META_KEY, true );

		if ( empty( $order_meta_all_tracking_updates ) ) {
			return $html;
		}

		$new_html = '<ul>';

		/**
		 * The WooCommerce Shipment Tracking data for this tracking number.
		 *
		 * @var array{tracking_provider:string, custom_tracking_provider:string, custom_tracking_link:string, tracking_number:string, date_shipped:string, tracking_id:string} $tracking_item
		 */
		foreach ( $tracking_items as $tracking_item ) {

			/**
			 * Tracking item data formatted for display.
			 *
			 * @var array{formatted_tracking_provider:string, formatted_tracking_link:string} $formatted
			 */
			$formatted = $wc_shipment_tracking_actions->get_formatted_tracking_item( $order_id, $tracking_item );

			// Remove spaces from the saved tracking number.
			$tracking_number = str_replace( ' ', '', $tracking_item['tracking_number'] );

			if ( isset( $order_meta_all_tracking_updates[ $tracking_number ] ) ) {
				$tracking_detail = $order_meta_all_tracking_updates[ $tracking_number ];

				$last_updated_time = $tracking_detail->get_last_updated_time();
				if ( ! is_null( $last_updated_time ) ) {
					$updated_tooltip = $last_updated_time->format( 'l, j F Y' );
					$new_html       .= sprintf( '<li><a title="' . $updated_tooltip . '" href="%s" target="_blank">', esc_url( $formatted['formatted_tracking_link'] ) );
				} else {
					$new_html .= sprintf( '<li><a href="%s" target="_blank">', esc_url( $formatted['formatted_tracking_link'] ) );
				}

				if ( ! is_null( $tracking_detail->get_delivery_time() ) && 'completed' !== $tracking_detail->get_equivalent_order_status() ) {
					$new_html .= '<p style="color:#2271b1;">';
					$new_html .= '<span class="description" style="color: #999; margin-right:3px; display:inline-block;">Expected delivery:</span>';
					$new_html .= '<span class="expected-delivery" style="display:inline-block">';
					$new_html .= $tracking_detail->get_delivery_time()->format( 'l, d-M' );
					$new_html .= '</span>';
					$new_html .= '</p>';

				} else {

					$new_html .= sprintf( '<li><a href="%s" target="_blank">', esc_url( $formatted['formatted_tracking_link'] ) );
					$new_html .= '<p style="color:#2271b1;">' . $tracking_detail->get_carrier_status() . '</p>';
				}

				$new_html .= '<span class="description" style="color: #50575e; display: block;">';

			} else {
				$new_html .= '<span>';
			}

			$new_html .= esc_html( $tracking_item['tracking_number'] );

			$new_html .= '</span>';

			$new_html .= '</li>';
		}
		$new_html .= '</ul>';

		$allowed_html = array(
			'ul'   => array(),
			'li'   => array(),
			'a'    => array(
				'href'   => array(),
				'target' => array(),
				'title'  => array(),
			),
			'p'    => array(
				'style' => array(),
			),
			'span' => array(
				'style' => array(),
				'class' => array(),
			),
		);

		/**
		 * Allow using 'display: inline-block' in styles.
		 *
		 * @see https://wordpress.org/support/topic/problem-with-wp_kses/
		 *
		 * @param string[] $styles Styles permitted by wp_kses.
		 * @return string[]
		 */
		add_filter(
			'safe_style_css',
			function( array $styles ) {
				$styles[] = 'display';
				return $styles;
			}
		);

		return wp_kses( $new_html, $allowed_html );
	}

}
